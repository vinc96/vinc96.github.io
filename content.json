{"meta":{"title":"VinC |HomePage (*´∇｀*)","subtitle":"UofU","description":"_blank_description","author":"VinC Cheng","url":"https://vinc96.github.io"},"pages":[{"title":"","date":"2016-10-08T18:22:27.796Z","updated":"2016-10-08T18:22:27.796Z","comments":true,"path":"404/404.html","permalink":"https://vinc96.github.io/404/404.html","excerpt":"","text":"VinC Homepage This text is displayed if your browser does not support HTML5 Canvas. _project_TypePractice last edited on 13 Aug. 2016 _project_AsukaGoogle last edited on 27 Aug. 2016 _project_CiskyMedia last edited on 28 Aug. 2016 &ensp;&ensp; &ensp;&ensp;"},{"title":"404 Not Found：该页无法显示","date":"2016-09-17T05:58:10.000Z","updated":"2016-09-17T06:12:56.122Z","comments":false,"path":"/404.html","permalink":"https://vinc96.github.io//404.html","excerpt":"","text":""},{"title":"About","date":"2016-09-16T23:06:19.000Z","updated":"2016-10-08T18:22:17.164Z","comments":true,"path":"about/index.html","permalink":"https://vinc96.github.io/about/index.html","excerpt":"","text":"What is my favorite song? 菜穂子(眼差し) -久石譲, from the japanese movie 風立ちぬ THE WIND RISES"},{"title":"tags","date":"2016-09-16T23:04:18.000Z","updated":"2016-10-01T09:08:38.206Z","comments":false,"path":"tags/index.html","permalink":"https://vinc96.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"29个网页设计必要的备忘单(无图版)","slug":"29个网页设计必要的备忘单-无图版","date":"2016-10-10T02:48:31.000Z","updated":"2016-10-10T03:07:46.082Z","comments":true,"path":"2016/10/09/29个网页设计必要的备忘单-无图版/","link":"","permalink":"https://vinc96.github.io/2016/10/09/29个网页设计必要的备忘单-无图版/","excerpt":"","text":"CSS - 层叠样式表 (Cascading Style Sheets)01. CSS - OverAPI.com02. 媒介查询03. 响应式布局04. 系统字体兼容性 HTML - 超文本标记语言 (HyperText Markup Language)05. HTML506. HTML兼容07. HTML5 - Antonio Lupetti JavaScript &amp; jQuery08. jQuery API09. JavaScript - OverAPI.com Markdown10. Markdown(可打印) CSS框架11. Bootstrap 3(可以粘贴代码)12. Font Awesome图标13. Bootstrap 3 Glyphicons图标14. Foundation 5 WordPress15. WordPress备忘单16. WordPress17. WordPress开发 浏览器开发工具18. Chrome开发者工具 |Chrome Dev Tools19. Firebug快捷键 Git &amp; Github20. git指令 Sublime21. Sublime快捷键(windows)22. Sublime快捷键(mac) 社交媒体23. 主流社交媒体图片规格 SEO24. SEO常用对照表 美工软件25. CSS备忘单 - OverAPI.com26. Sketch 3快捷键27. Photoshop快捷键28. Adobe快捷键 作者：Yuri Burchenya链接：29 Must-Have Cheat Sheets for Web Designers","categories":[],"tags":[],"keywords":[]},{"title":"29个网页设计必要的备忘单","slug":"29个网页设计必要的工具图","date":"2016-10-10T00:38:40.000Z","updated":"2016-10-10T03:07:16.140Z","comments":true,"path":"2016/10/09/29个网页设计必要的工具图/","link":"","permalink":"https://vinc96.github.io/2016/10/09/29个网页设计必要的工具图/","excerpt":"","text":"跳到备忘单： 【CSS】 【HTML】 【JavaScript &amp; jQuery】 【Markdown】 【CSS框架】 【WordPress】 【浏览器开发工具】 【Git和GitHub】 【Sublime】 【社交媒体】 【SEO】 【美工软件】 CSS - 层叠样式表 (Cascading Style Sheets)01. CSS - OverAPI.com 02. 媒介查询 03. 响应式布局 04. 系统字体兼容性 HTML - 超文本标记语言 (HyperText Markup Language)05. HTML5 06. HTML兼容 07. HTML5 - Antonio Lupetti JavaScript &amp; jQuery08. jQuery API 09. JavaScript - OverAPI.com Markdown10. Markdown(可打印) CSS框架11. Bootstrap 3(可以粘贴代码) 12. Font Awesome图标 13. Bootstrap 3 Glyphicons图标 14. Foundation 5 WordPress15. WordPress备忘单 16. WordPress 17. WordPress开发 浏览器开发工具18. Chrome开发者工具 |Chrome Dev Tools 19. Firebug快捷键 Git &amp; Github20. git指令 Sublime21. Sublime快捷键(windows) 22. Sublime快捷键(mac) 社交媒体23. 主流社交媒体图片规格 SEO24. SEO常用对照表 美工软件25. CSS备忘单 - OverAPI.com 26. Sketch 3快捷键 27. Photoshop快捷键 28. Adobe快捷键 作者：Yuri Burchenya链接：29 Must-Have Cheat Sheets for Web Designers","categories":[],"tags":[],"keywords":[]},{"title":"CSS：position属性","slug":"CSS之Position详解","date":"2016-10-08T02:20:45.000Z","updated":"2016-10-09T19:14:56.343Z","comments":true,"path":"2016/10/07/CSS之Position详解/","link":"","permalink":"https://vinc96.github.io/2016/10/07/CSS之Position详解/","excerpt":"我们先来看看CSS3 Api中对position属性的相关定义： static：无特殊定位，对象遵循正常文档流。top，right，bottom，left等属性不会被应用。 relative：对象遵循正常文档流，但将依据top，right，bottom，left等属性在正常文档流中偏移位置。而其层叠通过z-index属性定义。 absolute：对象脱离正常文档流，使用top，right，bottom，left等属性进行绝对定位。而其层叠通过z-index属性定义。 fixed：对象脱离正常文档流，使用top，right，bottom，left等属性以窗口为参考点进行定位，当出现滚动条时，对象不会随着滚动。而其层叠通过z-index属性定义。","text":"我们先来看看CSS3 Api中对position属性的相关定义： static：无特殊定位，对象遵循正常文档流。top，right，bottom，left等属性不会被应用。 relative：对象遵循正常文档流，但将依据top，right，bottom，left等属性在正常文档流中偏移位置。而其层叠通过z-index属性定义。 absolute：对象脱离正常文档流，使用top，right，bottom，left等属性进行绝对定位。而其层叠通过z-index属性定义。 fixed：对象脱离正常文档流，使用top，right，bottom，left等属性以窗口为参考点进行定位，当出现滚动条时，对象不会随着滚动。而其层叠通过z-index属性定义。 怎么样，是不是还是很迷糊~~ 没关系，下面就从几个基础概念一一给大家详述： 什么是文档流？ 将窗体自上而下分成一行行, 并在每行中按从左至右的顺序排放元素,即为文档流。只有三种情况会使得元素脱离文档流，分别是：浮动、绝对定位和相对定位。 静态定位(static) ： static，无特殊定位，它是html元素默认的定位方式，即我们不设定元素的position属性时默认的position值就是static，它遵循正常的文档流对象，对象占用文档空间，该定位方式下，top、right、bottom、left、z-index等属性是无效的。 相对定位(relative) ： relative定位，又称为相对定位，从字面上来解析，我们就可以看出该属性的主要特性：相对。但是它相对的又是相对于什么地方而言的呢？这个是个重点，也是最让我迷糊的一个地方，现在让我们来做个测试，我想大家都会明白的： (1) &ensp;初始未定位/******初始*********/ &lt;style type=&quot;text/css&quot;&gt; #first { width: 200px; height: 100px; border: 1px solid red; } #second{ width: 200px; height: 100px; border: 1px solid blue;} &lt;/style&gt; &lt;body&gt; &lt;div id=&quot;first&quot;&gt; first&lt;/div&gt; &lt;div id=&quot;second&quot;&gt;second&lt;/div&gt; &lt;/body&gt; 初始原图： (2) 我们修改first元素的position属性：&lt;style type=&quot;text/css&quot;&gt; #first{ width: 200px; height: 100px; border: 1px solid red; position: relative; top: 20px; left: 20px;} /*add position*/ #second{width: 200px; height: 100px; border: 1px solid blue;} &lt;/style&gt; 相对偏移20px后： – &gt;&gt; 虚线是初始的位置空间 现在看明白了吧，相对定位相对的是它原本在文档流中的位置而进行的偏移，而我们也知道relative定位也是遵循正常的文档流，它没有脱离文档流，但是它的top/left/right/bottom属性是生效的，可以说它是static到absoult的一个中间过渡属性，最重要的是它还占有文档空间，而且占据的文档空间不会随 top / right / left / bottom 等属性的偏移而发生变动，也就是说它后面的元素是依据虚线位置( top / left / right / bottom 等属性生效之前)进行的定位，这点一定要理解。 那好，我们知道了top / right / left / bottom 属性是不会对relative定位的元素所占据的文档空间产生偏移，那么margin / padding会让该文档空间产生偏移吗？答案是肯定的，我们一起来做个试验吧： (3) 添加margin属性：&lt;style type=&quot;text/css&quot;&gt; #first{width: 200px;height: 100px;border: 1px solid red;position: relative;top: 20px;left: 20px;margin: 20px;} /* add margin*/ #second{width: 200px;height:100px;border: 1px solid blue;} &lt;/style&gt; 设置margin：20px后： 对比一下，是不是就很清晰了，我们先将first元素外边距设为20px，那么second元素就得向下偏移40px，所以margin是占据文档空间！同理，大家可以自己动手测下padding的效果吧！ 绝对定位(absoulte) ： absoulte定位，也称为绝对定位，虽然它的名字号曰“绝对”，但是它的功能却更接近于”相对”一词，为什么这么讲呢？原来，使用absoult定位的元素脱离文档流后，就只能根据祖先类元素(父类以上)进行定位，而这个祖先类还必须是以postion非static方式定位的， 举个例子，a元素使用absoulte定位，它会从父类开始找起，寻找以position非static方式定位的祖先类元素(注意，一定要是直系祖先才算哦~），直到标签为止，这里还需要注意的是，relative和static方式在最外层时是以标签为定位原点的，而absoulte方式在无父级是position非static定位时是以作为原点定位。和元素相差9px左右。我们来看下效果： (1) 添加absoulte属性：&lt;html&gt; &lt;style type=&quot;text/css&quot;&gt; html{border:1px dashed green;} body{border:1px dashed purple;} #first{ width: 200px;height: 100px;border: 1px solid red;position: relative;} #second{ width: 200px;height: 100px;border: 1px solid blue;position: absolute;top :0;left : 0;} &lt;/style&gt; &lt;body&gt; &lt;div id=&quot;first&quot;&gt;relative&lt;/div&gt; &lt;div id=&quot;second&quot;&gt;absoult&lt;/div&gt; &lt;/body&gt; &lt;/html&gt; 效果图： 哈哈，看了上面的代码后，细心的朋友肯定要问了，为什么absoulte定位要加 top:0; left:0; 属性，这不是多此一举呢？ 其实加上这两个属性是完全必要的，因为我们如果使用absoulte或fixed定位的话，必须指定 left、right、 top、 bottom 属性中的至少一个，否则left/right/top/bottom属性会使用它们的默认值 auto ，这将导致对象遵从正常的HTML布局规则，在前一个对象之后立即被呈递，简单讲就是都变成relative，会占用文档空间，这点非常重要，很多人使用absolute定位后发现没有脱离文档流就是这个原因，这里要特别注意~~~ 少了left/right/top/bottom属性不行，那如果我们多设了呢？例如，我们同时设置了top和bottom的属性值，那元素又该往哪偏移好呢？记住下面的规则： 如果top和bottom一同存在的话，那么只有top生效。如果left和right一同存在的话，那么只有left生效。 既然absoulte是根据祖先类中的position非static元素进行定位的，那么祖先类中的margin/padding会不会对position产生影响呢？看个例子先： (2) 在absoulte定位中添加margin / padding属性：#first{width: 200px;height: 100px;border: 1px solid red;position: relative;margin:40px;padding:40px;} #second{width: 200px;height:100px;border: 1px solid blue;position: absolute;top:20px;left:20px;} &lt;div id=&quot;first&quot;&gt;first &lt;div id=&quot;second&quot;&gt;second&lt;/div&gt; &lt;/div&gt; 效果图： 看懂了，祖先类的margin会让子类的absoulte跟着偏移，而padding却不会让子类的absoulte发生偏移。总结一下，就是absoulte是根据祖先类的border进行的定位。 Note : 绝对(absolute)定位对象在可视区域之外会导致滚动条出现。而放置相对(relative)定位对象在可视区域之外，滚动条不会出现。 固定定位(fixed)： fixed定位，又称为固定定位，它和absoult定位一样，都脱离了文档流，并且能够根据top、right、left、bottom属性进行定位，但不同的是fixed是根据窗口为原点进行偏移定位的，也就是说它不会根据滚动条的滚动而进行偏移。 z-index属性： z-index，又称为对象的层叠顺序，它用一个整数来定义堆叠的层次，整数值越大，则被层叠在越上面，当然这是指同级元素间的堆叠，如果两个对象的此属性具有同样的值，那么将依据它们在HTML文档中流的顺序层叠，写在后面的将会覆盖前面的。需要注意的是，父子关系是无法用z-index来设定上下关系的，一定是子级在上父级在下。 Note：使用static 定位或无position定位的元素z-index属性是无效的。 版权声明：本文为博主原创文章，转载请注明原出处，谢谢！","categories":[],"tags":[],"keywords":[]},{"title":"Introducing Daydream View, VR Headset by Google And More..","slug":"Introducing-Daydream-View-VR-Headset-by-Google","date":"2016-10-04T22:19:28.000Z","updated":"2016-10-07T20:48:24.970Z","comments":true,"path":"2016/10/04/Introducing-Daydream-View-VR-Headset-by-Google/","link":"","permalink":"https://vinc96.github.io/2016/10/04/Introducing-Daydream-View-VR-Headset-by-Google/","excerpt":"","text":"","categories":[],"tags":[],"keywords":[]},{"title":"什么是Full Stack Engineer？","slug":"What-Is-Full-Stack-Engineer","date":"2016-10-01T19:14:57.000Z","updated":"2016-10-01T20:57:09.013Z","comments":true,"path":"2016/10/01/What-Is-Full-Stack-Engineer/","link":"","permalink":"https://vinc96.github.io/2016/10/01/What-Is-Full-Stack-Engineer/","excerpt":"作者：顾鹏链接：怎样成为全栈工程师（Full Stack Developer）？来源：知乎著作权归作者所有，转载请联系作者获得授权。","text":"作者：顾鹏链接：怎样成为全栈工程师（Full Stack Developer）？来源：知乎著作权归作者所有，转载请联系作者获得授权。 做这样一个简单的 app:一个天气应用，干净清爽的界面，天气信息一目了然。它不仅可以精确预测未来 10 天的天气，还可以显示某地的历史天气信息。它具有自定义提醒功能，支持 web 版本， iOS 版， Android 版。 为什么想要做这样一个 App ？因为你喜欢旅行，但没找到一个天气 App 可以提供你下个月或者某个特定月份的天气信息；因为你懒你没有每天看天气预报的习惯，你想要在第二天温度达到 30 度以上或者温差有 +/-7 度的时候，获得温馨提示；因为你要成为一个 Full Stack Engineer ，你必须不断训练每个 stack 的能力。 ## Web版你决定用 MySql 来存储用户数据，用 NoSql 存储历史天气数据。你用 Redis 作为 cache ，缓存一些最常请求的天气数据。你用 Python 写后台，功能简单，后台不复杂，用户注册登录，抓取返回某城市的天气数据，某地的历史天气数据，很快便搞定。 后台开发并测试好了，接下来是 Web 前端。你十分清楚一个好的 UI 设计对一个 App 的重要性，你也明白 UI 的设计不只是为了美观，更重要的是提高信息的可读性和程序的可用性。幸好你平日的积累这次派上用场了。你把之前保存下来的上百个优秀的UI设计作品拿来研究，你从书架上拿出Norman 的那本经典 - The Design of Everyday Things 重新细读。最终你用白纸黑笔敲定了第一个版本的 UI，简洁直观，没有任何多余的设计，所有元素的排列间距 大小颜色都恰到好处。你相信即使天气不好，但用户只要使用这个 App 都会有着愉悦的心情。 那么开始写前端吧。啊，别急，都忘了还有 Icon 和 Logo ，可是不会 PS ，不会 AI ，不会 Sketch 怎么办呢，学吧。你平日喜欢结交不同领域的朋友，正好几周前在一个活动上你认识一位朋友做设计的。她花一个下午的时间教你基本的 Sketch 的使用，并对你的 UI 设计给出了一些意见。你请她吃了顿晚饭表示感谢，然后立即回家根据她的一些建议重新调整了 UI ，这次你在 PS 里把 UI 画了出来，Icons 和 Logo 也顺道一起做了。 接下来的一周，你学习 HTML，CSS，以及 Javascript，并漂亮地把前端搞定。 ## 发布 App在朋友圈发了个状态，找人帮你做 Beta 测试。他们都首先问你是什么 App，一开始你简单回答一个天气的 App。但你发现，这不能提起他们的兴趣。你觉得你需要用语言，用故事包装一下。不光是作为别人「是什么 App」提问的回答，也是成为 Full stack Engineer 道路上的一个重要技能。 你去看了所有你喜欢的产品的主页，从他们的文案上获得一些灵感启发；你读了经典的 On Writing Well ，发现好的文案，好的设计，其实和好的代码很相似，都是重在交流，如何让他人毫不费劲地明白你要表达的内容。你的故事要吸引人，你的产品介绍要在1分钟内解释清楚，并确保你的父母可以毫无压力听明白。 一切就绪，产品上线了。反响不错，用户持续增加。很多用户希望有移动版本，于是你立即投入到iOS 版本的开发上。 ##iOS 版 及 后台优化你花一周不到时间学习了基本的语法和工具使用便投入到 App 的开发中。你知道 Learn by Doing 是最好也是最快的。由于之前学习了设计的基础，UI ，Icons 很快搞定，不久 iOS 版本便发布了。iOS 的发布带来了更多的用户增长，后台服务器的压力颇大，你知道是时候优化后台了。 你在 AWS 上多开了 2 台服务器，并写了一个 Script 来自动化部署过程。你改用 uWSGi 协议，用 uwsgi 作为 Application Server。你使用 Nginx 来做并发，负载均衡 …………… ## 成立公司用户持续增长，每天你都会收到十几二十封用户的邮件。你很感激这些愿意花时间给你写邮件的用户，你相信他们是你最重要的用户，是潜在的付费用户。如果你把他们像上帝一样对待，他们同样也会把你看作是上帝。所以除了睡觉时间的发来的邮件，每一封邮件，你都会在2小时内给予回复。 果然这样的付出是收获巨大的，他们不仅惊讶且非常感谢你的快速回复，他们会在app store里给你★★★★★的评价，他们在社交网站上分享你的app，他们甚至会主动提出捐款给你。 你从快速的用户增长中嗅到了商机，你开始思考如何赚钱。广告你是坚决不能允许的，你认为再精确的广告也会影响用户体验。你设计了 2 个不同的付费方案，你打算用 A/B 测试看哪个方案更好。你分别给 200 个用户发去邀请尝试付费的邮件，邮件内容你精心打磨过，并在最后写上：CEO &amp; Founder. 通过分析 2 种方案的用户行为，你决定将使用第一种方案。 接下来，你相信差不多是时候成立个公司了。为了省时间，你花 2000 块钱找了个园区挂靠并帮你注册公司。公司的名字让你头疼了很久，你不想只是简单的用这个 App 的名字作为公司名字，你知道公司将来还会做出其他优秀的产品。你希望这个名字简单易记，同时其含义也是你公司文化的象征。 公司注册下来了，但银行那边得自己跑。你联系了一些媒体编辑，邀请他们来试用你的产品；你重新设计了产品主页，并开始写产品的 Blog ；你在各大社交网络都给 App 注册了账号，即做社区客服也为宣传… 这些事大大压缩你写代码的时间。以往你都是以代码量作为衡量自己当天工作效率的指标，所以这些天你总感觉没做啥工作。 这样的发展早已超过你的预期，这个 App 从一个 Side Project 几乎变成了你生活的全部。你跟你女朋友半个月才出去约会一次，她抱怨不断；你1个月没跟朋友出去玩耍喝酒了；你 2 个月都没锻炼过身体… 你意识到, YOU CAN NOT DO THIS ALONE，你需要帮手，你需要找人一起把这个做下去。 但你不是要成为 Full Stack Engineer 么？你现在是了么？ ## Full Stack Engineer设计，后台开发，前端开发，移动开发，运营维护，PS，文案… 好像都会了，这算 Full Stack Engineer 了么？ 不，这只是踏上成为 Full Stack Engineer 的第一步。你知道目前只是每个 stack 都懂一点，离senior 或者 expert 还差得远，而要每个 stack 都做到极致，需要大量的时间和精力。精力有限，产品开发紧迫，力不从心啊，这条道路也太孤独，因为你不需要与任何人进行协作。难道要把一些stack的任务交给别人做么？这样算是放弃成为 Full Stack Engineer 么？ 不！这不是。什么是 Engineer？「Engineers are versatile minds who create links between science, technology, and society」。Engineer 的本质工作是设计，开发出应用于大众的产品。 一个真正的 Full Stack Engineer ，他从生活中发现问题，洞察需求，他设计解决方案，并开发出初始版本的产品。为了达到目标，他愿意去学习任何领域的技能和知识。同时他不追求一个人完成所有工作，如果有人可以比他在某方面做得更出色，便会十分热情的邀请他们加入。 最终他的职位也许不再是 Engineer ，他不再设计 UI ，不再写代码 … 他的工作不再是 design and building an app or product，因为他有更大更重要的任务要做 - design and building a team or a company which builds great products. 而这时，社会给了他们另一个称呼 - 创业者。尽管众人已忘记他们 Engineer 的身份，但在他们骨子里，内心深处，自己始终都是一个 Engineer 。当他们需要从头再来时，他们毫不犹豫从设计开发产品做起。Nikola Tesla，Ferdinand Porsche，Henry Ford，Jack Dorsey，Mark zuckerberg，Elon Musk … 细数那些改变了或正改变世界的创业者，他们大多数是 Engineer 背景，热衷于设计创造。他们学习技能和知识，不是为了成为某个领域的专家；而是因为那些 是完成自己目标所需要的。 以上，为我认可的 Full Stack Engineer by Peng","categories":[],"tags":[],"keywords":[]},{"title":"Google releases Allo: an AI-infused messaging app","slug":"Google-releases-Allo-an-AI-infused-messaging-app","date":"2016-09-21T18:11:29.000Z","updated":"2016-09-21T19:11:10.941Z","comments":true,"path":"2016/09/21/Google-releases-Allo-an-AI-infused-messaging-app/","link":"","permalink":"https://vinc96.github.io/2016/09/21/Google-releases-Allo-an-AI-infused-messaging-app/","excerpt":"","text":"Allo now available on Google Play and App Store An IM(instant messaging) app Google Assistant Find resturants nearby, share videos to watch Get answers, right in your conversation with friends. tip: Add @google to your group conversation or chat one-on-one(Only with when both are using Allo) Smart Reply Respond to messages without typing a single word. Smart Reply learns over time and suggests responses to text and photos, in your style. Incognito mode Send messages with end-to-end encryption, use private notifications to help keep your chats more discreet, and control how long your messages stick around with expiring chats.","categories":[],"tags":[],"keywords":[]},{"title":"One Way To Handle MIPS OverFlow","slug":"One-Way-To-Handle-MIPS-OverFlow","date":"2016-09-18T22:02:02.000Z","updated":"2016-09-18T22:45:46.380Z","comments":true,"path":"2016/09/18/One-Way-To-Handle-MIPS-OverFlow/","link":"","permalink":"https://vinc96.github.io/2016/09/18/One-Way-To-Handle-MIPS-OverFlow/","excerpt":"IntroductionException handlers, also known as trap handlers or interrupt handlers, can easily be incorporated into a MIPS program. This guide is not intended to be comprehensive but provides the essential information for writing and using exception handlers.","text":"IntroductionException handlers, also known as trap handlers or interrupt handlers, can easily be incorporated into a MIPS program. This guide is not intended to be comprehensive but provides the essential information for writing and using exception handlers. Although the same mechanism services all three, exceptions, traps and interrupts are all distinct from each other. Exceptions are caused by exceptional conditions that occur at runtime such as invalid memory address references. Traps are caused by instructions constructed especially for this purpose, listed below. Interrupts are caused by external devices. MARS partially but not completely implements the exception and interrupt mechanism of SPIM. Essential FactsSome essential facts about writing and using exception handlers include: MARS simulates basic elements of the MIPS32 exception mechanism. The MIPS instruction set includes a number of instructions that conditionally trigger a trap exception based on the relative values of two registers or of a constant and a register: teq, teqi (trap if equal), tne, tnei (trap if not equal), tge, tgeu, tgei, tgeiu (trap if greater than or equal), tlt, tltu, tlti, tltiu (trap if less than) When an exception occurs, Coprocessor 0 register $12 (status) bit 1 is set Coprocessor 0 register $13 (cause) bits 2-6 are set to the exception type (codes below) Coprocessor 0 register $14 (epc) is set to the address of the instruction that triggered the exception If the exception was caused by an invalid memory address, Coprocessor 0 register $8 (vaddr) is set to the invalid address. Execution flow jumps to the MIPS instruction at memory location 0x800000180. This address in the kernel text segment (.ktext directive) is the standard MIPS32 exception handler location. The only way to change it in MARS is to change the MIPS memory configuration through the Settings menu item Memory Configuration. There are three ways to include an exception handler in a MIPS program1.Write the exception handler in the same file as the regular program. An example of this is presented below. Write the exception handler in a separate file, store that file in the same directory as the regular program, and select the Settings menu item “Assemble all files in directory” Write the exception handler in a separate file, store that file in any directory, then open the “Exception Handler…” dialog in the Settings menu, check the check box and browse to that file. If there is no instruction at location 0x800000180, MARS will terminate the MIPS program with an appropriate error message. The exception handler can return control to the program using the eret instruction. This will place the EPC register \\$14 value into the Program Counter, so be sure to increment \\$14 by 4 before returning to skip over the instruction that caused the exception. The mfc0 and mtc0 instructions are used to read from and write to Coprocessor 0 registers. Bits 8-15 of the Cause register \\$13 can also be used to indicate pending interrupts. Currently this is used only by the Keyboard and Display Simulator Tool, where bit 8 represents a keyboard interrupt and bit 9 represents a display interrupt. For more details, see the Help panel for that Tool. Exception types declared in mars.simulator.Exceptions, but not necessarily implemented, are ADDRESS_EXCEPTION_LOAD (4), ADDRESS_EXCEPTION_STORE (5), SYSCALL_EXCEPTION (8), BREAKPOINT_EXCEPTION (9), RESERVED_INSTRUCTION_EXCEPTION (10), ARITHMETIC_OVERFLOW_EXCEPTION (12), TRAP_EXCEPTION(13), DIVIDE_BY_ZERO_EXCEPTION (15), FLOATING_POINT_OVERFLOW (16), and FLOATING_POINT_UNDERFLOW (17). When writing a non-trivial exception handler, your handler must first save general purpose register contents, then restore them before returning. Example of Trap HandlerThe sample MIPS program below will immediately generate a trap exception because the trap condition evaluates true, control jumps to the exception handler, the exception handler returns control to the instruction following the one that triggered the exception, then the program terminates normally.1234567891011121314151617181920212223 .textmain: teqi $t0,0 # immediately trap because $t0 contains 0 li $v0, 10 # After return from exception handler, specify exit service syscall # terminate normally# Trap handler in the standard MIPS32 kernel text segment .ktext 0x80000180 move $k0,$v0 # Save $v0 value move $k1,$a0 # Save $a0 value la $a0, msg # address of string to print li $v0, 4 # Print String service syscall move $v0,$k0 # Restore $v0 move $a0,$k1 # Restore $a0 mfc0 $k0,$14 # Coprocessor 0 register $14 has address of trapping instruction addi $k0,$k0,4 # Add 4 to point to next instruction mtc0 $k0,$14 # Store new address back into $14 eret # Error return; set PC to value in $14 .kdata msg: .asciiz &quot;Trap generated&quot; Widely Used Exception HandlerThe exception handler exceptions.s provided with the SPIM simulator will assemble and run under MARS. The MARS assembler will generate warnings because this program contains directives that it does not recognize, but as long as the setting “Assembler warnings are considered errors” is not set this will not cause any problems. Origin Article : Writing and Using MIPS exception handlers in MARS","categories":[],"tags":[],"keywords":[]},{"title":"Dual Booting Or Virtual Machine To Learn Linux?","slug":"Dual-Booting-Or-Virtual-Machine-To-Learn-Linux","date":"2016-09-16T20:03:56.000Z","updated":"2016-09-17T07:31:58.216Z","comments":true,"path":"2016/09/16/Dual-Booting-Or-Virtual-Machine-To-Learn-Linux/","link":"","permalink":"https://vinc96.github.io/2016/09/16/Dual-Booting-Or-Virtual-Machine-To-Learn-Linux/","excerpt":"I would suggest you to go with virtual box, provided your machine has atleast 4Gb RAM. Because: It is very likely that you will end up erasing your entire hard disk while installing Ubuntu. But there is no such risk when you install it in virtual box.","text":"I would suggest you to go with virtual box, provided your machine has atleast 4Gb RAM. Because: It is very likely that you will end up erasing your entire hard disk while installing Ubuntu. But there is no such risk when you install it in virtual box. You can copy and take the virtual hard disk to other machines and attach it to virtual box there to have the same machine there as well. You don’t have to install all the apps at both places, for example Skype because you can always use them by just minimizing your Ubuntu. When you get comfortable with Linux, you can use linux server version instead of linux desktop. Linux server is very light because of no GUI.This way your Linux will just be a terminal and you will need to use Windows for browsers and stuff. Some suggestions: Put the virtual hard drive in some drive other than C and don’t hasitate when allocating space. If you have a quad core CPU, allow the virtual machine to use atleast two. Once you are in, avoid using mouse as much as you can. Try not to leave keyboard. This makes you fast. Go learn it, you will love it. :)Happy hunting ;) Pawan Bishnoi, Writing my story via vim, 8 hours a day since last year. ;)","categories":[],"tags":[],"keywords":[]},{"title":"阿里巴巴四员工编程抢月饼被开除","slug":"阿里巴巴四员工编程抢月饼被开除","date":"2016-09-15T05:05:38.000Z","updated":"2016-09-17T07:32:04.608Z","comments":true,"path":"2016/09/14/阿里巴巴四员工编程抢月饼被开除/","link":"","permalink":"https://vinc96.github.io/2016/09/14/阿里巴巴四员工编程抢月饼被开除/","excerpt":"","text":"中秋节，各个公司纷纷给员工发月饼送去节日的问候，本来是件挺开心的事情，可是阿里巴巴有4名员工却因为月饼遭开除。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9月12日，阿里巴巴开放员工抢购月饼，阿里巴巴集团安全部4位员工和阿里云安全团队的1位员工，用编写脚本代码方式，在公开秒杀月饼的内部活动“秒到”了133盒月饼。虽然没有付款，但最终在当天晚间被劝退。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当事人在知乎上表示，只是想抢一盒月饼送给亲戚，看到有人用程序刷，于是自己也写了个脚本抢购16时放出的月饼，可是不但没有跳转到付款页面，反而一共抢了16盒，于是赶紧打电话给行政说要退，随后就被约谈，解约走人了。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;“16:30 约谈，17:30 解约合同就备好了，18:00走人，走之前还特意问了下需不需要交接工作，大家都不care，走的事情比较重要。”如此迅速，当事人表示猝不及防。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对此，阿里巴巴集团市场公关委员会主席王帅在微博上表示，“今天这个引起争议的决定，让我们再次提醒自己和每个员工，每场游戏都有规则，所有偶然总有必然。无可奈何是因为万事都有底线。很遗憾但祝愿他们的未来更好。” &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9月14日，阿里巴巴集团首席人力官蒋芳对日前的“月饼事件”作出官方回应，表示“这不是一个容易做出的决定，也不是一个可以得到各方面理解的决定”。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在内部信的最后，蒋芳“真心希望也相信这个事业人生旅途上的挫折，能让这几位年轻人想的更远走的更踏实”。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;附蒋芳写给员工的内部信全文： 关于“月饼”事件的复盘 9月12日，安全部4位同学和阿里云安全团队的1位同学，用编写脚本代码方式，在公开秒杀月饼的内部活动“秒到”了133盒月饼。 首席风险官刘振飞及阿里云总裁胡晓明在与上述同学经过非常坦诚的沟通之后，公司对上述同学做出了劝退的决定。这不是一个容易做出的决定，也不是一个可以得到各方面理解的决定，这个决定也让公司再次成为舆论的风暴眼。 来自公司内网，微博微信，知乎，各种对此事的关注和讨论我们一直在看。今天，集团用4个小时对此事进行了复盘和讨论，逍遥子、戴珊、行癫、振飞，郭靖，王坚，王帅，马老师及我都参与其中。最终我们选择支持振飞和晓明的决定，我们读到和听到各界的反馈，也检讨和反思我们在做这个决定之前和之后哪些工作没有做好，引发许多同事担忧我们对坚守价值观过于偏执以及会给鼓励创新的容错文化造成伤害。实话实说，我们也争论，纠结，感到难受。 很多人问为什么我们处理的这么重？因为阿里是一家把权力真正下放到每个普通小二手里的公司，下放权力的基础就是组织和员工之间的本能的信任。只有一个建立在信任基础上的团队才能走得长远，打得起硬仗。因为只有授权才能服务好客户，更快地根据客户需求做出迅速有效的决定。但我们必须反复提醒自己，要善待手中的权力，也像爱惜自己的眼睛一样爱惜别人对自己的信任，爱惜自己的才华，更何况是以攻防网络灰黑产和反作弊为己任的安全部门同事。 未来我们还将继续充分信任和授权我们的同事。在这个过程里，我们可能还会作出一些让公司陷入风暴眼的决定，因为我们不是做给别人看的，而是敬重大家彼此间的信任，一致的理念，遵循做事做人的初衷和本心。 公司和人一样，不完美。我们很幸运，用本心做对了一件件小事，才有了今天的影响力；未来我们若不能保持一颗敬畏心，而是以自己的方便和获益为首要考虑，那么也将是一件件看似不起眼的小事，解构和击败所有人的奋斗。 有时候往往无心之举，却带来的大家都不愿但也要面对结果，这种结果最让人无奈。在月圆之夜送同伴离开，应该是这个中秋最大的遗憾。真心希望也相信这个事业人生旅途上的挫折，能让这几位年轻人想的更远走的更踏实。每个阿里巴巴的同事，也更应该理解，因为征途远，责任重。唯有学会约束自己的欲望，尊重自己的能力，敬畏手中的权力，我们才担得起亿万客户的信任和托付。 蒋芳 2016年9月14日 除非注明，月光博客文章均为原创，转载请以链接形式标明本文地址 本文地址：author page","categories":[],"tags":[],"keywords":[]},{"title":"Death Stranding - New Details from TGS 2016: Open World, Co-Op, 4K, & More!","slug":"Death-Stranding-New-Details-from-TGS-2016-Open-World-Co-Op-4K-More","date":"2016-09-14T07:20:21.000Z","updated":"2016-09-17T07:32:10.432Z","comments":true,"path":"2016/09/14/Death-Stranding-New-Details-from-TGS-2016-Open-World-Co-Op-4K-More/","link":"","permalink":"https://vinc96.github.io/2016/09/14/Death-Stranding-New-Details-from-TGS-2016-Open-World-Co-Op-4K-More/","excerpt":"","text":"","categories":[],"tags":[],"keywords":[]},{"title":"Basic CS Cheat Sheet","slug":"BasicCSCheatSheet","date":"2016-09-12T19:30:04.000Z","updated":"2016-09-17T07:32:38.026Z","comments":true,"path":"2016/09/12/BasicCSCheatSheet/","link":"","permalink":"https://vinc96.github.io/2016/09/12/BasicCSCheatSheet/","excerpt":"","text":"刪除YouTube播放列表視頻代碼（在瀏覽器console內輸入）： function removeVideos(){var el = document.getElementsByClassName(‘pl-video-edit-remove’);var i=0;setInterval(function(){el[i++].click()}, 50);}removeVideos();window.onerror = function(){removeVideos();}","categories":[],"tags":[],"keywords":[]},{"title":"MarkDown Cheat Sheet","slug":"MarkDown-Cheat-Sheet","date":"2016-09-12T19:18:23.000Z","updated":"2016-09-17T07:32:21.849Z","comments":true,"path":"2016/09/12/MarkDown-Cheat-Sheet/","link":"","permalink":"https://vinc96.github.io/2016/09/12/MarkDown-Cheat-Sheet/","excerpt":"TypographyHeadingsHeadings from h1 through h6 are constructed with a # for each level: 123456# h1 Heading## h2 Heading### h3 Heading#### h4 Heading##### h5 Heading###### h6 Heading","text":"TypographyHeadingsHeadings from h1 through h6 are constructed with a # for each level: 123456# h1 Heading## h2 Heading### h3 Heading#### h4 Heading##### h5 Heading###### h6 Heading Renders to: h1 Headingh2 Headingh3 Headingh4 Headingh5 Headingh6 HeadingHTML: 123456&lt;h1&gt;h1 Heading&lt;/h1&gt;&lt;h2&gt;h2 Heading&lt;/h2&gt;&lt;h3&gt;h3 Heading&lt;/h3&gt;&lt;h4&gt;h4 Heading&lt;/h4&gt;&lt;h5&gt;h5 Heading&lt;/h5&gt;&lt;h6&gt;h6 Heading&lt;/h6&gt; Horizontal RulesThe HTML &lt;hr&gt; element is for creating a “thematic break” between paragraph-level elements. In markdown, you can create a &lt;hr&gt; with any of the following: ___: three consecutive underscores ---: three consecutive dashes ***: three consecutive asterisks renders to: Body CopyBody copy written as normal, plain text will be wrapped with &lt;p&gt;&lt;/p&gt; tags in the rendered HTML. So this body copy: 1Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. renders to this HTML: 1&lt;p&gt;Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.&lt;/p&gt; EmphasisBoldFor emphasizing a snippet of text with a heavier font-weight. The following snippet of text is rendered as bold text. 1**rendered as bold text** renders to: rendered as bold text and this HTML 1&lt;strong&gt;rendered as bold text&lt;/strong&gt; ItalicsFor emphasizing a snippet of text with italics. The following snippet of text is rendered as italicized text. 1_rendered as italicized text_ renders to: rendered as italicized text and this HTML: 1&lt;em&gt;rendered as italicized text&lt;/em&gt; strikethroughIn GFM you can do strickthroughs. 1~~Strike through this text.~~ Which renders to: Strike through this text. BlockquotesFor quoting blocks of content from another source within your document. Add &gt; before any text you want to quote. 1Add `&gt;` before any text you want to quote. Renders to: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. and this HTML: 123&lt;blockquote&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.&lt;/p&gt;&lt;/blockquote&gt; Blockquotes can also be nested: 123456&gt; Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. &gt;&gt; Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.&gt;&gt;&gt; Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Renders to: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue.Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctorodio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue.Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. ListsUnorderedA list of items in which the order of the items does not explicitly matter. You may use any of the following symbols to denote bullets for each list item: 123* valid bullet- valid bullet+ valid bullet For example 123456789101112+ Lorem ipsum dolor sit amet+ Consectetur adipiscing elit+ Integer molestie lorem at massa+ Facilisis in pretium nisl aliquet+ Nulla volutpat aliquam velit - Phasellus iaculis neque - Purus sodales ultricies - Vestibulum laoreet porttitor sem - Ac tristique libero volutpat at+ Faucibus porta lacus fringilla vel+ Aenean sit amet erat nunc+ Eget porttitor lorem Renders to: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem And this HTML 1234567891011121314151617&lt;ul&gt; &lt;li&gt;Lorem ipsum dolor sit amet&lt;/li&gt; &lt;li&gt;Consectetur adipiscing elit&lt;/li&gt; &lt;li&gt;Integer molestie lorem at massa&lt;/li&gt; &lt;li&gt;Facilisis in pretium nisl aliquet&lt;/li&gt; &lt;li&gt;Nulla volutpat aliquam velit &lt;ul&gt; &lt;li&gt;Phasellus iaculis neque&lt;/li&gt; &lt;li&gt;Purus sodales ultricies&lt;/li&gt; &lt;li&gt;Vestibulum laoreet porttitor sem&lt;/li&gt; &lt;li&gt;Ac tristique libero volutpat at&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Faucibus porta lacus fringilla vel&lt;/li&gt; &lt;li&gt;Aenean sit amet erat nunc&lt;/li&gt; &lt;li&gt;Eget porttitor lorem&lt;/li&gt;&lt;/ul&gt; OrderedA list of items in which the order of items does explicitly matter. 123456781. Lorem ipsum dolor sit amet2. Consectetur adipiscing elit3. Integer molestie lorem at massa4. Facilisis in pretium nisl aliquet5. Nulla volutpat aliquam velit6. Faucibus porta lacus fringilla vel7. Aenean sit amet erat nunc8. Eget porttitor lorem Renders to: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem And this HTML: 12345678910&lt;ol&gt; &lt;li&gt;Lorem ipsum dolor sit amet&lt;/li&gt; &lt;li&gt;Consectetur adipiscing elit&lt;/li&gt; &lt;li&gt;Integer molestie lorem at massa&lt;/li&gt; &lt;li&gt;Facilisis in pretium nisl aliquet&lt;/li&gt; &lt;li&gt;Nulla volutpat aliquam velit&lt;/li&gt; &lt;li&gt;Faucibus porta lacus fringilla vel&lt;/li&gt; &lt;li&gt;Aenean sit amet erat nunc&lt;/li&gt; &lt;li&gt;Eget porttitor lorem&lt;/li&gt;&lt;/ol&gt; TIP: If you just use 1. for each number, GitHub will automatically number each item. For example: 123456781. Lorem ipsum dolor sit amet1. Consectetur adipiscing elit1. Integer molestie lorem at massa1. Facilisis in pretium nisl aliquet1. Nulla volutpat aliquam velit1. Faucibus porta lacus fringilla vel1. Aenean sit amet erat nunc1. Eget porttitor lorem Renders to: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem CodeInline codeWrap inline snippets of code with ` . For example, &lt;section&gt;&lt;/section&gt; should be wrapped as “inline”. 1For example, `&lt;section&gt;&lt;/section&gt;` should be wrapped as \"inline\". Indented codeOr indent several lines of code by at least four spaces, as in: 1234// Some commentsline 1 of codeline 2 of codeline 3 of code // Some comments line 1 of code line 2 of code line 3 of code Block code “fences”Use “fences” ``` ```` to block in multiple lines of code. 1234&lt;pre&gt;``` htmlSample text here... 1Sample text here... HTML: 123&lt;pre&gt; &lt;p&gt;Sample text here...&lt;/p&gt;&lt;/pre&gt; Syntax highlightingGFM, or “GitHub Flavored Markdown” also supports syntax highlighting. To activate it, simply add the file extension of the language you want to use directly after the first code “fence”, ` `, and syntax highlighting will automatically be applied in the rendered HTML. For example, to apply syntax highlighting to JavaScript code:123456789101112131415161718192021&lt;pre&gt;``` javascriptgrunt.initConfig(&#123; assemble: &#123; options: &#123; assets: 'docs/assets', data: 'src/data/*.&#123;json,yml&#125;', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.&#123;hbs,md&#125;'] &#125;, pages: &#123; options: &#123; layout: 'default.hbs' &#125;, files: &#123; './': ['src/templates/pages/index.hbs'] &#125; &#125; &#125;&#125;; Renders to: 123456789101112131415161718grunt.initConfig(&#123; assemble: &#123; options: &#123; assets: 'docs/assets', data: 'src/data/*.&#123;json,yml&#125;', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.&#123;hbs,md&#125;'] &#125;, pages: &#123; options: &#123; layout: 'default.hbs' &#125;, files: &#123; './': ['src/templates/pages/index.hbs'] &#125; &#125; &#125;&#125;; And this complicated HTML: 12345678910111213141516171819&lt;div class=\"highlight\"&gt;&lt;pre&gt;&lt;span class=\"nx\"&gt;grunt&lt;/span&gt;&lt;span class=\"p\"&gt;.&lt;/span&gt;&lt;span class=\"nx\"&gt;initConfig&lt;/span&gt;&lt;span class=\"p\"&gt;(&#123;&lt;/span&gt; &lt;span class=\"nx\"&gt;assemble&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"p\"&gt;&#123;&lt;/span&gt; &lt;span class=\"nx\"&gt;options&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"p\"&gt;&#123;&lt;/span&gt; &lt;span class=\"nx\"&gt;assets&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"s1\"&gt;'docs/assets'&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt; &lt;span class=\"nx\"&gt;data&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"s1\"&gt;'src/data/*.&#123;json,yml&#125;'&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt; &lt;span class=\"nx\"&gt;helpers&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"s1\"&gt;'src/custom-helpers.js'&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt; &lt;span class=\"nx\"&gt;partials&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"p\"&gt;[&lt;/span&gt;&lt;span class=\"s1\"&gt;'src/partials/**/*.&#123;hbs,md&#125;'&lt;/span&gt;&lt;span class=\"p\"&gt;]&lt;/span&gt; &lt;span class=\"p\"&gt;&#125;,&lt;/span&gt; &lt;span class=\"nx\"&gt;pages&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"p\"&gt;&#123;&lt;/span&gt; &lt;span class=\"nx\"&gt;options&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"p\"&gt;&#123;&lt;/span&gt; &lt;span class=\"nx\"&gt;layout&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"s1\"&gt;'default.hbs'&lt;/span&gt; &lt;span class=\"p\"&gt;&#125;,&lt;/span&gt; &lt;span class=\"nx\"&gt;files&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"p\"&gt;&#123;&lt;/span&gt; &lt;span class=\"s1\"&gt;'./'&lt;/span&gt;&lt;span class=\"o\"&gt;:&lt;/span&gt; &lt;span class=\"p\"&gt;[&lt;/span&gt;&lt;span class=\"s1\"&gt;'src/templates/pages/index.hbs'&lt;/span&gt;&lt;span class=\"p\"&gt;]&lt;/span&gt; &lt;span class=\"p\"&gt;&#125;&lt;/span&gt; &lt;span class=\"p\"&gt;&#125;&lt;/span&gt; &lt;span class=\"p\"&gt;&#125;&lt;/span&gt;&lt;span class=\"p\"&gt;&#125;;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt; TablesTables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned. 12345| Option | Description || ------ | ----------- || data | path to data files to supply the data that will be passed into templates. || engine | engine to be used for processing templates. Handlebars is the default. || ext | extension to be used for dest files. | Renders to: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. And this HTML: 123456789101112131415161718&lt;table&gt; &lt;tr&gt; &lt;th&gt;Option&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;data&lt;/td&gt; &lt;td&gt;path to data files to supply the data that will be passed into templates.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;engine&lt;/td&gt; &lt;td&gt;engine to be used for processing templates. Handlebars is the default.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ext&lt;/td&gt; &lt;td&gt;extension to be used for dest files.&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; Right aligned textAdding a colon on the right side of the dashes below any heading will right align text for that column. 12345| Option | Description || ------:| -----------:|| data | path to data files to supply the data that will be passed into templates. || engine | engine to be used for processing templates. Handlebars is the default. || ext | extension to be used for dest files. | Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. LinksBasic link1[Assemble](http://assemble.io) Renders to (hover over the link, there is no tooltip): Assemble HTML: 1&lt;a href=\"http://assemble.io\"&gt;Assemble&lt;/a&gt; Add a title1[Upstage](https://github.com/upstage/ \"Visit Upstage!\") Renders to (hover over the link, there should be a tooltip): Upstage HTML: 1&lt;a href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"&gt;Upstage&lt;/a&gt; Named AnchorsNamed anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters: 1234# Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) will jump to these sections: 12345678## Chapter 1 &lt;a id=\"chapter-1\"&gt;&lt;/a&gt;Content for chapter one.## Chapter 2 &lt;a id=\"chapter-2\"&gt;&lt;/a&gt;Content for chapter one.## Chapter 3 &lt;a id=\"chapter-3\"&gt;&lt;/a&gt;Content for chapter one. NOTE that specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works. ImagesImages have a similar syntax to links but include a preceding exclamation point. 1![Minion](http://octodex.github.com/images/minion.png) or1![Alt text](http://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") Like links, Images also have a footnote style syntax 1![Alt text][id] With a reference later in the document defining the URL location: [id]: http://octodex.github.com/images/dojocat.jpg &quot;The Dojocat&quot;","categories":[],"tags":[],"keywords":[]},{"title":"First Article","slug":"First-Article","date":"2016-09-12T02:18:00.000Z","updated":"2016-09-17T07:31:39.527Z","comments":true,"path":"2016/09/11/First-Article/","link":"","permalink":"https://vinc96.github.io/2016/09/11/First-Article/","excerpt":"","text":"","categories":[],"tags":[],"keywords":[]}]}